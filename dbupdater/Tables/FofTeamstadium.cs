/*

insert license info here

*/

using System;
using System.Collections;
using System.Collections.Generic;


namespace DBUpdater.Tables
{
	/// <summary>
	/// Generated by MyGeneration using the NHibernate Object Mapping 1.3.1 by Grimaldi Giuseppe (giuseppe.grimaldi@infracom.it)
	/// </summary>
	[Serializable]
	public class FofTeamstadium 
	{
		#region Private Members
		
		// Variabili di stato
		private bool misChanged;
		private bool misDeleted;

		// Primary Key(s) 
		private short mteamid; 
		
		// Properties 
		private byte mstadiumtype; 
		private short myearstadiumbuilt; 
		private int mtotalcapacity; 
		private short mluxuryboxes; 
		private int mclubseats; 
		private byte mfanloyalty; 
		private byte mpublicsupport; 
		private short mupperdeckprice; 
		private short mendzoneprice; 
		private short mmezzanineprice; 
		private short msidelinesprice; 
		private short mclubseatsprice; 
		private int mluxuryboxprice; 
		private short mconstructioncompleteyear; 
		private byte mconstructiontype; 
		private int mconstructioncapacity; 
		private short mconstructionluxuryboxes; 
		private int mconstructionclubseats; 
		private byte mconstructionstadiumtype; 
		private int mprioryearattendance; 		

		#endregion
		
		#region Default ( Empty ) Class Constructor
		
		/// <summary>
		/// default constructor
		/// </summary>
		public FofTeamstadium()
		{
			mteamid = 0; 
			mstadiumtype = 0; 
			myearstadiumbuilt = 0; 
			mtotalcapacity = 0; 
			mluxuryboxes = 0; 
			mclubseats = 0; 
			mfanloyalty = 0; 
			mpublicsupport = 0; 
			mupperdeckprice = 0; 
			mendzoneprice = 0; 
			mmezzanineprice = 0; 
			msidelinesprice = 0; 
			mclubseatsprice = 0; 
			mluxuryboxprice = 0; 
			mconstructioncompleteyear = 0; 
			mconstructiontype = 0; 
			mconstructioncapacity = 0; 
			mconstructionluxuryboxes = 0; 
			mconstructionclubseats = 0; 
			mconstructionstadiumtype = 0; 
			mprioryearattendance = 0; 
		}
		
		#endregion // End of Default ( Empty ) Class Constructor
		
		#region Full Constructor
		
		/// <summary>
		/// full constructor
		/// </summary>
		public FofTeamstadium(short teamid, byte stadiumtype, short yearstadiumbuilt, int totalcapacity, short luxuryboxes, int clubseats, byte fanloyalty, byte publicsupport, short upperdeckprice, short endzoneprice, short mezzanineprice, short sidelinesprice, short clubseatsprice, int luxuryboxprice, short constructioncompleteyear, byte constructiontype, int constructioncapacity, short constructionluxuryboxes, int constructionclubseats, byte constructionstadiumtype, int prioryearattendance)
		{
			mteamid = teamid; 
			mstadiumtype = stadiumtype; 
			myearstadiumbuilt = yearstadiumbuilt; 
			mtotalcapacity = totalcapacity; 
			mluxuryboxes = luxuryboxes; 
			mclubseats = clubseats; 
			mfanloyalty = fanloyalty; 
			mpublicsupport = publicsupport; 
			mupperdeckprice = upperdeckprice; 
			mendzoneprice = endzoneprice; 
			mmezzanineprice = mezzanineprice; 
			msidelinesprice = sidelinesprice; 
			mclubseatsprice = clubseatsprice; 
			mluxuryboxprice = luxuryboxprice; 
			mconstructioncompleteyear = constructioncompleteyear; 
			mconstructiontype = constructiontype; 
			mconstructioncapacity = constructioncapacity; 
			mconstructionluxuryboxes = constructionluxuryboxes; 
			mconstructionclubseats = constructionclubseats; 
			mconstructionstadiumtype = constructionstadiumtype; 
			mprioryearattendance = prioryearattendance; 
		}
		
		#endregion // End Full Constructor
		
		#region Internal Accessors for NHibernate
		
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _Teamid
		{
			get { return mteamid; }
			set { mteamid = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _StadiumType
		{
			get { return mstadiumtype; }
			set { mstadiumtype = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _YearStadiumBuilt
		{
			get { return myearstadiumbuilt; }
			set { myearstadiumbuilt = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _TotalCapacity
		{
			get { return mtotalcapacity; }
			set { mtotalcapacity = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _LuxuryBoxes
		{
			get { return mluxuryboxes; }
			set { mluxuryboxes = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _ClubSeats
		{
			get { return mclubseats; }
			set { mclubseats = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _FanLoyalty
		{
			get { return mfanloyalty; }
			set { mfanloyalty = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _PublicSupport
		{
			get { return mpublicsupport; }
			set { mpublicsupport = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _UpperDeckPrice
		{
			get { return mupperdeckprice; }
			set { mupperdeckprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _EndZonePrice
		{
			get { return mendzoneprice; }
			set { mendzoneprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _MezzaninePrice
		{
			get { return mmezzanineprice; }
			set { mmezzanineprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _SidelinesPrice
		{
			get { return msidelinesprice; }
			set { msidelinesprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _ClubSeatsPrice
		{
			get { return mclubseatsprice; }
			set { mclubseatsprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _LuxuryBoxPrice
		{
			get { return mluxuryboxprice; }
			set { mluxuryboxprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _ConstructionCompleteYear
		{
			get { return mconstructioncompleteyear; }
			set { mconstructioncompleteyear = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _ConstructionType
		{
			get { return mconstructiontype; }
			set { mconstructiontype = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _ConstructionCapacity
		{
			get { return mconstructioncapacity; }
			set { mconstructioncapacity = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _ConstructionLuxuryBoxes
		{
			get { return mconstructionluxuryboxes; }
			set { mconstructionluxuryboxes = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _ConstructionClubSeats
		{
			get { return mconstructionclubseats; }
			set { mconstructionclubseats = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _ConstructionStadiumType
		{
			get { return mconstructionstadiumtype; }
			set { mconstructionstadiumtype = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _PriorYearAttendance
		{
			get { return mprioryearattendance; }
			set { mprioryearattendance = value; }
		} 
	  
		#endregion // Internal Accessors for NHibernate 

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public virtual short Teamid
		{
			get { return mteamid; }
			set { misChanged |= (mteamid != value); mteamid = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte StadiumType
		{
			get { return mstadiumtype; }
			set { misChanged |= (mstadiumtype != value); mstadiumtype = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short YearStadiumBuilt
		{
			get { return myearstadiumbuilt; }
			set { misChanged |= (myearstadiumbuilt != value); myearstadiumbuilt = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual int TotalCapacity
		{
			get { return mtotalcapacity; }
			set { misChanged |= (mtotalcapacity != value); mtotalcapacity = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short LuxuryBoxes
		{
			get { return mluxuryboxes; }
			set { misChanged |= (mluxuryboxes != value); mluxuryboxes = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual int ClubSeats
		{
			get { return mclubseats; }
			set { misChanged |= (mclubseats != value); mclubseats = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte FanLoyalty
		{
			get { return mfanloyalty; }
			set { misChanged |= (mfanloyalty != value); mfanloyalty = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte PublicSupport
		{
			get { return mpublicsupport; }
			set { misChanged |= (mpublicsupport != value); mpublicsupport = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short UpperDeckPrice
		{
			get { return mupperdeckprice; }
			set { misChanged |= (mupperdeckprice != value); mupperdeckprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short EndZonePrice
		{
			get { return mendzoneprice; }
			set { misChanged |= (mendzoneprice != value); mendzoneprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short MezzaninePrice
		{
			get { return mmezzanineprice; }
			set { misChanged |= (mmezzanineprice != value); mmezzanineprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short SidelinesPrice
		{
			get { return msidelinesprice; }
			set { misChanged |= (msidelinesprice != value); msidelinesprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short ClubSeatsPrice
		{
			get { return mclubseatsprice; }
			set { misChanged |= (mclubseatsprice != value); mclubseatsprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual int LuxuryBoxPrice
		{
			get { return mluxuryboxprice; }
			set { misChanged |= (mluxuryboxprice != value); mluxuryboxprice = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short ConstructionCompleteYear
		{
			get { return mconstructioncompleteyear; }
			set { misChanged |= (mconstructioncompleteyear != value); mconstructioncompleteyear = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte ConstructionType
		{
			get { return mconstructiontype; }
			set { misChanged |= (mconstructiontype != value); mconstructiontype = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual int ConstructionCapacity
		{
			get { return mconstructioncapacity; }
			set { misChanged |= (mconstructioncapacity != value); mconstructioncapacity = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short ConstructionLuxuryBoxes
		{
			get { return mconstructionluxuryboxes; }
			set { misChanged |= (mconstructionluxuryboxes != value); mconstructionluxuryboxes = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual int ConstructionClubSeats
		{
			get { return mconstructionclubseats; }
			set { misChanged |= (mconstructionclubseats != value); mconstructionclubseats = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte ConstructionStadiumType
		{
			get { return mconstructionstadiumtype; }
			set { misChanged |= (mconstructionstadiumtype != value); mconstructionstadiumtype = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual int PriorYearAttendance
		{
			get { return mprioryearattendance; }
			set { misChanged |= (mprioryearattendance != value); mprioryearattendance = value; }
		} 
	  
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsChanged
		{
			get { return misChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsDeleted
		{
			get { return misDeleted; }
		}
		
		#endregion 
		
		#region Public Functions

		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public virtual void MarkAsDeleted()
		{
			misDeleted = true;
			misChanged = true;
		}
		
		#endregion
		
		#region Equals And HashCode Overrides
		
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			FofTeamstadium castObj = (FofTeamstadium)obj; 
			return ( castObj != null ) &&
				( this.mteamid == castObj.Teamid );
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{ 
			int hash = 57; 
			hash = 27 * hash * this.mteamid.GetHashCode();
					
			return hash;		
			
		}
		
		#endregion
		
	}
}