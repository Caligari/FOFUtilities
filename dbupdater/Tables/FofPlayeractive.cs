/*

insert license info here

*/

using System;
using System.Collections;
using System.Collections.Generic;


namespace DBUpdater.Tables
{
	/// <summary>
	/// Generated by MyGeneration using the NHibernate Object Mapping 1.3.1 by Grimaldi Giuseppe (giuseppe.grimaldi@infracom.it)
	/// </summary>
	[Serializable]
	public class FofPlayeractive 
	{
		#region Private Members
		
		// Variabili di stato
		private bool misChanged;
		private bool misDeleted;

		// Primary Key(s) 
		private int mid; 
		
		// Properties 
		private byte mposition; 
		private byte mexperience; 
		private byte mnumber; 
		private byte mpositiongroup; 
		private byte mteam; 
		private short minjurylength; 
		private byte mloyalty; 
		private byte mplaystowin; 
		private byte mpersonality; 
		private byte mleadership; 
		private byte mintelligence; 
		private byte mredflagmarker; 
		private byte mvolatility; 
		private short mjoinedteam; 
		private short mufayear; 
		private byte mpopularity; 
		private byte mcontractlength; 
		private long msalary1; 
		private long msalary2; 
		private long msalary3; 
		private long msalary4; 
		private long msalary5; 
		private long msalary6; 
		private long msalary7; 
		private long mbonus1; 
		private long mbonus2; 
		private long mbonus3; 
		private long mbonus4; 
		private long mbonus5; 
		private long mbonus6; 
		private long mbonus7; 		

		#endregion
		
		#region Default ( Empty ) Class Constructor
		
		/// <summary>
		/// default constructor
		/// </summary>
		public FofPlayeractive()
		{
			mid = 0; 
			mposition = 0; 
			mexperience = 0; 
			mnumber = 0; 
			mpositiongroup = 0; 
			mteam = 0; 
			minjurylength = 0; 
			mloyalty = 0; 
			mplaystowin = 0; 
			mpersonality = 0; 
			mleadership = 0; 
			mintelligence = 0; 
			mredflagmarker = 0; 
			mvolatility = 0; 
			mjoinedteam = 0; 
			mufayear = 0; 
			mpopularity = 0; 
			mcontractlength = 0; 
			msalary1 = 0; 
			msalary2 = 0; 
			msalary3 = 0; 
			msalary4 = 0; 
			msalary5 = 0; 
			msalary6 = 0; 
			msalary7 = 0; 
			mbonus1 = 0; 
			mbonus2 = 0; 
			mbonus3 = 0; 
			mbonus4 = 0; 
			mbonus5 = 0; 
			mbonus6 = 0; 
			mbonus7 = 0; 
		}
		
		#endregion // End of Default ( Empty ) Class Constructor
		
		#region Full Constructor
		
		/// <summary>
		/// full constructor
		/// </summary>
		public FofPlayeractive(int id, byte position, byte experience, byte number, byte positiongroup, byte team, short injurylength, byte loyalty, byte playstowin, byte personality, byte leadership, byte intelligence, byte redflagmarker, byte volatility, short joinedteam, short ufayear, byte popularity, byte contractlength, long salary1, long salary2, long salary3, long salary4, long salary5, long salary6, long salary7, long bonus1, long bonus2, long bonus3, long bonus4, long bonus5, long bonus6, long bonus7)
		{
			mid = id; 
			mposition = position; 
			mexperience = experience; 
			mnumber = number; 
			mpositiongroup = positiongroup; 
			mteam = team; 
			minjurylength = injurylength; 
			mloyalty = loyalty; 
			mplaystowin = playstowin; 
			mpersonality = personality; 
			mleadership = leadership; 
			mintelligence = intelligence; 
			mredflagmarker = redflagmarker; 
			mvolatility = volatility; 
			mjoinedteam = joinedteam; 
			mufayear = ufayear; 
			mpopularity = popularity; 
			mcontractlength = contractlength; 
			msalary1 = salary1; 
			msalary2 = salary2; 
			msalary3 = salary3; 
			msalary4 = salary4; 
			msalary5 = salary5; 
			msalary6 = salary6; 
			msalary7 = salary7; 
			mbonus1 = bonus1; 
			mbonus2 = bonus2; 
			mbonus3 = bonus3; 
			mbonus4 = bonus4; 
			mbonus5 = bonus5; 
			mbonus6 = bonus6; 
			mbonus7 = bonus7; 
		}
		
		#endregion // End Full Constructor
		
		#region Internal Accessors for NHibernate
		
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _Id
		{
			get { return mid; }
			set { mid = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _Position
		{
			get { return mposition; }
			set { mposition = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _Experience
		{
			get { return mexperience; }
			set { mexperience = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _Number
		{
			get { return mnumber; }
			set { mnumber = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _PositionGroup
		{
			get { return mpositiongroup; }
			set { mpositiongroup = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _Team
		{
			get { return mteam; }
			set { mteam = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _InjuryLength
		{
			get { return minjurylength; }
			set { minjurylength = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _Loyalty
		{
			get { return mloyalty; }
			set { mloyalty = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _PlaysToWin
		{
			get { return mplaystowin; }
			set { mplaystowin = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _Personality
		{
			get { return mpersonality; }
			set { mpersonality = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _Leadership
		{
			get { return mleadership; }
			set { mleadership = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _Intelligence
		{
			get { return mintelligence; }
			set { mintelligence = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _RedFlagMarker
		{
			get { return mredflagmarker; }
			set { mredflagmarker = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _Volatility
		{
			get { return mvolatility; }
			set { mvolatility = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _JoinedTeam
		{
			get { return mjoinedteam; }
			set { mjoinedteam = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _UfaYear
		{
			get { return mufayear; }
			set { mufayear = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _Popularity
		{
			get { return mpopularity; }
			set { mpopularity = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _ContractLength
		{
			get { return mcontractlength; }
			set { mcontractlength = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Salary1
		{
			get { return msalary1; }
			set { msalary1 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Salary2
		{
			get { return msalary2; }
			set { msalary2 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Salary3
		{
			get { return msalary3; }
			set { msalary3 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Salary4
		{
			get { return msalary4; }
			set { msalary4 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Salary5
		{
			get { return msalary5; }
			set { msalary5 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Salary6
		{
			get { return msalary6; }
			set { msalary6 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Salary7
		{
			get { return msalary7; }
			set { msalary7 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Bonus1
		{
			get { return mbonus1; }
			set { mbonus1 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Bonus2
		{
			get { return mbonus2; }
			set { mbonus2 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Bonus3
		{
			get { return mbonus3; }
			set { mbonus3 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Bonus4
		{
			get { return mbonus4; }
			set { mbonus4 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Bonus5
		{
			get { return mbonus5; }
			set { mbonus5 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Bonus6
		{
			get { return mbonus6; }
			set { mbonus6 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual long _Bonus7
		{
			get { return mbonus7; }
			set { mbonus7 = value; }
		} 
	  
		#endregion // Internal Accessors for NHibernate 

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public virtual int Id
		{
			get { return mid; }
			set { misChanged |= (mid != value); mid = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte Position
		{
			get { return mposition; }
			set { misChanged |= (mposition != value); mposition = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte Experience
		{
			get { return mexperience; }
			set { misChanged |= (mexperience != value); mexperience = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte Number
		{
			get { return mnumber; }
			set { misChanged |= (mnumber != value); mnumber = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte PositionGroup
		{
			get { return mpositiongroup; }
			set { misChanged |= (mpositiongroup != value); mpositiongroup = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte Team
		{
			get { return mteam; }
			set { misChanged |= (mteam != value); mteam = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short InjuryLength
		{
			get { return minjurylength; }
			set { misChanged |= (minjurylength != value); minjurylength = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte Loyalty
		{
			get { return mloyalty; }
			set { misChanged |= (mloyalty != value); mloyalty = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte PlaysToWin
		{
			get { return mplaystowin; }
			set { misChanged |= (mplaystowin != value); mplaystowin = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte Personality
		{
			get { return mpersonality; }
			set { misChanged |= (mpersonality != value); mpersonality = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte Leadership
		{
			get { return mleadership; }
			set { misChanged |= (mleadership != value); mleadership = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte Intelligence
		{
			get { return mintelligence; }
			set { misChanged |= (mintelligence != value); mintelligence = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte RedFlagMarker
		{
			get { return mredflagmarker; }
			set { misChanged |= (mredflagmarker != value); mredflagmarker = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte Volatility
		{
			get { return mvolatility; }
			set { misChanged |= (mvolatility != value); mvolatility = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short JoinedTeam
		{
			get { return mjoinedteam; }
			set { misChanged |= (mjoinedteam != value); mjoinedteam = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short UfaYear
		{
			get { return mufayear; }
			set { misChanged |= (mufayear != value); mufayear = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte Popularity
		{
			get { return mpopularity; }
			set { misChanged |= (mpopularity != value); mpopularity = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte ContractLength
		{
			get { return mcontractlength; }
			set { misChanged |= (mcontractlength != value); mcontractlength = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Salary1
		{
			get { return msalary1; }
			set { misChanged |= (msalary1 != value); msalary1 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Salary2
		{
			get { return msalary2; }
			set { misChanged |= (msalary2 != value); msalary2 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Salary3
		{
			get { return msalary3; }
			set { misChanged |= (msalary3 != value); msalary3 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Salary4
		{
			get { return msalary4; }
			set { misChanged |= (msalary4 != value); msalary4 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Salary5
		{
			get { return msalary5; }
			set { misChanged |= (msalary5 != value); msalary5 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Salary6
		{
			get { return msalary6; }
			set { misChanged |= (msalary6 != value); msalary6 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Salary7
		{
			get { return msalary7; }
			set { misChanged |= (msalary7 != value); msalary7 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Bonus1
		{
			get { return mbonus1; }
			set { misChanged |= (mbonus1 != value); mbonus1 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Bonus2
		{
			get { return mbonus2; }
			set { misChanged |= (mbonus2 != value); mbonus2 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Bonus3
		{
			get { return mbonus3; }
			set { misChanged |= (mbonus3 != value); mbonus3 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Bonus4
		{
			get { return mbonus4; }
			set { misChanged |= (mbonus4 != value); mbonus4 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Bonus5
		{
			get { return mbonus5; }
			set { misChanged |= (mbonus5 != value); mbonus5 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Bonus6
		{
			get { return mbonus6; }
			set { misChanged |= (mbonus6 != value); mbonus6 = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual long Bonus7
		{
			get { return mbonus7; }
			set { misChanged |= (mbonus7 != value); mbonus7 = value; }
		} 
	  
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsChanged
		{
			get { return misChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsDeleted
		{
			get { return misDeleted; }
		}
		
		#endregion 
		
		#region Public Functions

		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public virtual void MarkAsDeleted()
		{
			misDeleted = true;
			misChanged = true;
		}
		
		#endregion
		
		#region Equals And HashCode Overrides
		
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			FofPlayeractive castObj = (FofPlayeractive)obj; 
			return ( castObj != null ) &&
				( this.mid == castObj.Id );
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{ 
			int hash = 57; 
			hash = 27 * hash * this.mid.GetHashCode();
					
			return hash;		
			
		}
		
		#endregion
		
	}
}