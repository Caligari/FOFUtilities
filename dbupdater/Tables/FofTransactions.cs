/*

insert license info here

*/

using System;
using System.Collections;
using System.Collections.Generic;


namespace DBUpdater.Tables
{
	/// <summary>
	/// Generated by MyGeneration using the NHibernate Object Mapping 1.3.1 by Grimaldi Giuseppe (giuseppe.grimaldi@infracom.it)
	/// </summary>
	[Serializable]
	public class FofTransactions 
	{
		#region Private Members
		
		// Variabili di stato
		private bool misChanged;
		private bool misDeleted;

		// Primary Key(s) 
		private int mid; 
		
		// Properties 
		private int minseasonindex; 
		private int mprimaryindex; 
		private int msalary; 
		private byte mtype; 
		private short mteam1id; 
		private int mteam2id; 
		private short mposition; 
		private short myears; 
		private short mstage; 
		private short mseason; 
		private int mplayerid; 		

		#endregion
		
		#region Default ( Empty ) Class Constructor
		
		/// <summary>
		/// default constructor
		/// </summary>
		public FofTransactions()
		{
			mid = 0; 
			minseasonindex = 0; 
			mprimaryindex = 0; 
			msalary = 0; 
			mtype = 0; 
			mteam1id = 0; 
			mteam2id = 0; 
			mposition = 0; 
			myears = 0; 
			mstage = 0; 
			mseason = 0; 
			mplayerid = 0; 
		}
		
		#endregion // End of Default ( Empty ) Class Constructor
		
		#region Full Constructor
		
		/// <summary>
		/// full constructor
		/// </summary>
		public FofTransactions(int id, int inseasonindex, int primaryindex, int salary, byte type, short team1id, int team2id, short position, short years, short stage, short season, int playerid)
		{
			mid = id; 
			minseasonindex = inseasonindex; 
			mprimaryindex = primaryindex; 
			msalary = salary; 
			mtype = type; 
			mteam1id = team1id; 
			mteam2id = team2id; 
			mposition = position; 
			myears = years; 
			mstage = stage; 
			mseason = season; 
			mplayerid = playerid; 
		}
		
		#endregion // End Full Constructor
		
		#region Internal Accessors for NHibernate
		
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _Id
		{
			get { return mid; }
			set { mid = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _InSeasonIndex
		{
			get { return minseasonindex; }
			set { minseasonindex = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _PrimaryIndex
		{
			get { return mprimaryindex; }
			set { mprimaryindex = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _Salary
		{
			get { return msalary; }
			set { msalary = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual byte _Type
		{
			get { return mtype; }
			set { mtype = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _Team1id
		{
			get { return mteam1id; }
			set { mteam1id = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _Team2id
		{
			get { return mteam2id; }
			set { mteam2id = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _Position
		{
			get { return mposition; }
			set { mposition = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _Years
		{
			get { return myears; }
			set { myears = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _Stage
		{
			get { return mstage; }
			set { mstage = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual short _Season
		{
			get { return mseason; }
			set { mseason = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>
		internal virtual int _Playerid
		{
			get { return mplayerid; }
			set { mplayerid = value; }
		} 
	  
		#endregion // Internal Accessors for NHibernate 

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public virtual int Id
		{
			get { return mid; }
			set { misChanged |= (mid != value); mid = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual int InSeasonIndex
		{
			get { return minseasonindex; }
			set { misChanged |= (minseasonindex != value); minseasonindex = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual int PrimaryIndex
		{
			get { return mprimaryindex; }
			set { misChanged |= (mprimaryindex != value); mprimaryindex = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual int Salary
		{
			get { return msalary; }
			set { misChanged |= (msalary != value); msalary = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual byte Type
		{
			get { return mtype; }
			set { misChanged |= (mtype != value); mtype = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short Team1id
		{
			get { return mteam1id; }
			set { misChanged |= (mteam1id != value); mteam1id = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual int Team2id
		{
			get { return mteam2id; }
			set { misChanged |= (mteam2id != value); mteam2id = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short Position
		{
			get { return mposition; }
			set { misChanged |= (mposition != value); mposition = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short Years
		{
			get { return myears; }
			set { misChanged |= (myears != value); myears = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short Stage
		{
			get { return mstage; }
			set { misChanged |= (mstage != value); mstage = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual short Season
		{
			get { return mseason; }
			set { misChanged |= (mseason != value); mseason = value; }
		} 
	  
		/// <summary>
		/// 
		/// </summary>		
		public virtual int Playerid
		{
			get { return mplayerid; }
			set { misChanged |= (mplayerid != value); mplayerid = value; }
		} 
	  
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsChanged
		{
			get { return misChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsDeleted
		{
			get { return misDeleted; }
		}
		
		#endregion 
		
		#region Public Functions

		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public virtual void MarkAsDeleted()
		{
			misDeleted = true;
			misChanged = true;
		}
		
		#endregion
		
		#region Equals And HashCode Overrides
		
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			FofTransactions castObj = (FofTransactions)obj; 
			return ( castObj != null ) &&
				( this.mid == castObj.Id );
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{ 
			int hash = 57; 
			hash = 27 * hash * this.mid.GetHashCode();
					
			return hash;		
			
		}
		
		#endregion
		
	}
}